#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "Root" (
    assetInfo = {
        asset identifier = @../../../../../../Users/Ista/Desktop/Art/AI Institute Bremen/Objectstandardisation/MultiverseVR_Formats/Models/LeatherCouch/usda/LeatherCouch.usda@
        string name = "00_EG_IstabraqsApartment"
        dictionary unreal = {
            string assetType = "World"
            string contentPath = "/Game/IstabraqsMaps/00_EG_IstabraqsApartment.00_EG_IstabraqsApartment"
            string engineVersion = "5.3.2-29314046+++UE5+Release-5.3"
            string exportTime = "2024.07.17-18.49.58"
        }
        string version = "B22D4AA62C72BACFB3ACE5EF2935BD450A393B83"
    }
)
{
    def "leather_couch" (
        prepend references = @Assets/Game/Meshes/MeshesLiving/leather_couch.usda@
    )
    {
        token visibility = "inherited"
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, -0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        over "Section1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/leather_couch/Section1/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Metal_Chrome.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/leather_couch/Section1/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Metal_Chrome.M_Metal_Chrome@
                    token outputs:out
                }
            }
        }

        over "Section0" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/leather_couch/Section0/UnrealMaterial>

            def Material "UnrealMaterial" (
                prepend references = @Assets/Game/Materials_Laborraum/M_Leather_Black.usda@
            )
            {
                token outputs:unreal:surface.connect = </Root/leather_couch/Section0/UnrealMaterial/UnrealShader.outputs:out>

                def Shader "UnrealShader"
                {
                    uniform token info:implementationSource = "sourceAsset"
                    uniform asset info:unreal:sourceAsset = @/Game/Materials_Laborraum/M_Leather_Black.M_Leather_Black@
                    token outputs:out
                }
            }
        }
    }
}

